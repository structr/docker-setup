version: '3.3'
services:  
  neo4j:
    image: neo4j:4.4

    # Structr versions < 4.0 can't change the initial neo4j password, so it has to be
    # set in the environment of the docker container. The password here has to be the
    # same as in the structr.conf file (default-migrated.database.connection.password).
    environment:
      - NEO4J_AUTH=neo4j/structr

    # Uncomment to give host access to the service container
    # ports:
    #  - "7474:7474"
    #  - "7473:7473"
    #  - "7687:7687"

    # For swarm mode deployment only.
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4g
        reservations:
          cpus: '1'
          memory: 1g

    # Add volumes for data retention
    volumes:
      # folders
      - ./volumes/neo4j-database:/data
      - ./volumes/neo4j-logs:/logs

    # Put service networks so Structr and Neo4j can communicate
    networks:
      database:
        aliases:
          - neo4j
  structr:
    image: structr:4.3-SNAPSHOT
    depends_on:
      - neo4j
    ports:
     - "8082:8082"
    environment:
      - STRUCTR_MIN_HEAP=1g
      - STRUCTR_MAX_HEAP=4g
      - AGREE_TO_STRUCTR_PRIVACY_POLICY=yes
      - STRUCTR_superuser_password=superuser
      - STRUCTR_database_available_connections=neo4j_default
      - STRUCTR_neo4j__default_database_driver=org.structr.bolt.BoltDatabaseService
      - STRUCTR_neo4j__default_database_connection_name=neo4j_default
      - STRUCTR_neo4j__default_database_connection_url=bolt://neo4j:7687
      - STRUCTR_neo4j__default_database_connection_username=neo4j
      - STRUCTR_neo4j__default_database_connection_password=structr
      - STRUCTR_nodeservice_active=neo4j_default
      - STRUCTR_application_schema_automigration=true

      # Add file system group for repository directory mount
      - STRUCTR_deploymentservlet_filegroup_name=structr
      - STRUCTR_deploymentservlet_filegroup_id=8082

    # For swarm mode deployment only.
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4g
        reservations:
          cpus: '1'
          memory: 1g

    # Add volumes for data retention
    volumes:

      # folders
      - ./volumes/structr-files:/var/lib/structr/files
      - ./volumes/structr-repository:/var/lib/structr/repository
      - ./volumes/structr-logs:/var/lib/structr/logs
      - ./structr/license.key:/var/lib/structr/license.key

      # Put service into network so Structr and Neo4j can communicate
    networks:
      database:

volumes:
  structr-files:
  structr-repository:
  structr-logs:
  neo4j-database:
  neo4j-logs:

networks:
  database: